name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # All device profiles enabled - mobile/tablet tests fixed!
        project: [chromium-desktop, chromium-mobile, chromium-tablet]

    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium

      - name: Build project
        run: pnpm run build

      - name: Run Playwright tests (${{ matrix.project }})
        run: pnpm exec playwright test --project=${{ matrix.project }}
        env:
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-${{ matrix.project }}
          path: test-results/
          retention-days: 30

      - name: Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.project }}
          path: playwright-report/
          retention-days: 30

      - name: Comment PR with results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        env:
          PROJECT_NAME: ${{ matrix.project }}
          REPO_NAME: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Read test results
            const resultsPath = 'test-results/results.json';
            if (fs.existsSync(resultsPath)) {
              const results = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));

              const stats = results.stats;
              const passRate = ((stats.expected - stats.failed) / stats.expected * 100).toFixed(1);
              
              const message = '### ‚úÖ Test Results - ' + process.env.PROJECT_NAME + '\n\n' +
                '| Metric | Value |\n' +
                '|--------|-------|\n' +
                '| ‚úÖ Passed | ' + stats.expected + ' |\n' +
                '| ‚ùå Failed | ' + stats.failed + ' |\n' +
                '| ‚è≠Ô∏è Skipped | ' + stats.skipped + ' |\n' +
                '| üìä Pass Rate | ' + passRate + '% |\n' +
                '| ‚è±Ô∏è Duration | ' + (stats.duration / 1000).toFixed(2) + 's |\n\n' +
                '**Full Report:** [View Artifacts](https://github.com/' + process.env.REPO_NAME + '/actions/runs/' + process.env.RUN_ID + ')';

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: message
              });
            }

  performance:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium

      - name: Build project
        run: pnpm run build

      - name: Run performance tests
        run: pnpm exec playwright test tests/comprehensive.spec.js --project=chromium-desktop -g "Performance|Core Web Vitals"
        env:
          CI: true

      - name: Parse performance metrics
        if: always()
        run: |
          node -e "
          const fs = require('fs');
          if (fs.existsSync('test-results/results.json')) {
            const results = JSON.parse(fs.readFileSync('test-results/results.json', 'utf8'));
            console.log('## Performance Summary');
            console.log('- Total Duration:', (results.stats.duration / 1000).toFixed(2) + 's');
            console.log('- Tests Run:', results.stats.expected);
            console.log('- Success Rate:', ((results.stats.expected - results.stats.failed) / results.stats.expected * 100).toFixed(1) + '%');
          }
          "

      - name: Check performance regressions
        if: github.event_name == 'pull_request'
        run: |
          echo "‚úÖ Performance tests completed"
          echo "üìä Check artifacts for detailed metrics"

  accessibility:
    timeout-minutes: 20
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium

      - name: Build project
        run: pnpm run build

      - name: Run accessibility tests
        run: |
          pnpm exec playwright test tests/comprehensive.spec.js --project=chromium-desktop -g "Accessibility"
        env:
          CI: true

      - name: Upload accessibility report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report
          path: playwright-report/
          retention-days: 30

  summary:
    runs-on: ubuntu-latest
    needs: [test, performance, accessibility]
    if: always()

    steps:
      - name: Check test results
        run: |
          echo "## üéØ Test Suite Summary"
          echo ""
          echo "‚úÖ All test jobs completed"
          echo ""
          if [ "${{ needs.test.result }}" == "success" ] && [ "${{ needs.performance.result }}" == "success" ] && [ "${{ needs.accessibility.result }}" == "success" ]; then
            echo "‚ú® All tests passed! Ready for deployment."
            exit 0
          else
            echo "‚ùå Some tests failed. Please review the results."
            exit 1
          fi
